---
title: "Primeiro .qmd"
format: 
  html: 
    toc: true            
    toc-location: right  
    toc-title: "Navegação"
    toc-floating: true   
    theme: cosmo         
editor: visual
---

## Exemplo de análises

O presente documento descreve os procedimentos de análises de dados empregados no curso de elaboração de relatórios com .qmd.

### 1. Instalando e carregando pacotes de análises

É necessário instalar os pacotes antes do carregamento caso não os tenha instalados na sua própria máquina.

Para isso, use a função `install.packages`.

```{r}
#| message: false
#| warning: false

# install.packages("tidyverse")
# install.packages("gapminder")

library(tidyverse)
library(gapminder)
library(modelsummary)

```

### 2. Carregamento de dados e descrição de variáveis

A fonte da base é o Instituto Gapminder. A missão do instituto é "lutar contra a ignorância devastadora com uma visão baseada em fatos que qualquer pessoa pode compreender". Para conhecer mais, acesse este [link](https://www.gapminder.org/about/).

![](gapminder.jpg){fig-align="center" width="136"}

Vamos acessar os dados já vem do pacote gapminder.

```{r}

df <- gapminder

glimpse(df)

```

As variáveis do `df` , conforme apresentado acima, são:

1.  country: país;

2.  continent: continente;

3.  year: ano;

4.  lifeExp: expectativa de vida;

5.  pop: população;

6.  gdpPercap: PIB per capita.

### 3. Análise exploratória de dados

Vamos fazer uma análise exploratória da expectativa média por continente ao longo do tempo. Para isso, vamos:

-   Agrupar as observações por continente e ano;

-   Sumarizar a variável `lifeExp`.

```{r}
#| message: false
#| warning: false

exp_media <- 
  df |> 
  group_by(continent, year) |> 
  summarise(expectativa_media = mean(lifeExp)) |> 
  mutate(expectativa_media = round(expectativa_media, 2))

exp_media

```

Em sequência, vamos plotar no formato de gráfico.

```{r}

exp_media |> 
  ggplot(aes(x = year,
             y = expectativa_media,
             col = continent)) +
  geom_line() + 
  theme_minimal() + 
  ylim(0, 100) + 
  xlab("Ano") + 
  ylab("Expectativa de vida média (em anos)")

```

Vamos verificar o recorte de um ano apenas: 1982.

```{r}

exp_media |> 
  filter(year == "1982") |> 
  ggplot(aes(x = year,
             y = expectativa_media,
             fill = continent)) +
  geom_col(position = "dodge") + 
  geom_text(aes(label = expectativa_media),
            position = position_dodge(width = 0.9),
            vjust = -0.8,  
            size = 3.5) +
  theme_minimal() + 
  ylim(0, 100) + 
  xlab("Ano") + 
  ylab("Expectativa de vida média (em anos)") + 
  theme(axis.text.x = element_blank())

```

### 4. Regressão linear

A seguir, apresentamos um modelo de regressão linear simples entre duas variáveis. A regressão linear é usada para analisar a associação entre duas ou mais variáveis, sendo uma variável dependente e as demais variáveis independentes.

$$
y_i = \beta_0 + \sum_{j=1}^{p} \beta_j\,x_{ij} + \varepsilon_i,\qquad i=1,\dots,n
$$

```{r}

df_modelo <- df |> filter(year == '2007')

modelo1 <- lm("lifeExp ~ gdpPercap",
             df_modelo)

modelo2 <- lm("lifeExp ~ log(gdpPercap) + continent",
              df_modelo)

modelsummary(
  list(modelo1, modelo2),
  output = "gt",
  estimate = "{estimate}{stars}",
  type = "text",
  title = "Resultado de Regressão Linear",
  conf_level = 0.95,
  stars      = c("*" = .10, 
                 "**" = .05, 
                 "***" = .01),
  gof_rename = c("nobs"="N", 
                 "r.squared"="R²", 
                 "adj.r.squared"="R² ajustado", 
                 "rmse"="RMSE"))

```

```{r}

df_modelo |> 
  ggplot(aes(x = log(gdpPercap), 
             y = lifeExp)) + 
  geom_point(aes(col = continent)) + 
  geom_smooth(method = "lm",
              se = FALSE) +
  theme_minimal()

```
